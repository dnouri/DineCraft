# Workflow name
name: Deploy DineCraft to GitHub Pages

# Controls when the workflow will run
on:
  # Triggers the workflow on push events but only for the main branch
  push:
    branches:
      - main # Or your default branch name (e.g., master)

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# Do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

# Define the jobs for the workflow
jobs:
  # Build job: Builds the project
  build:
    runs-on: ubuntu-latest # Use the latest Ubuntu runner
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4 # Checks out your repository code

      - name: Set up Node.js
        uses: actions/setup-node@v4 # Sets up Node.js environment
        with:
          node-version: '20' # Specify Node.js version (use LTS)
          cache: 'npm' # Cache npm dependencies for faster builds

      - name: Install dependencies
        run: npm ci # Install dependencies using package-lock.json

      - name: Build project
        run: npm run build # Execute the build script defined in package.json

      - name: Setup Pages
        uses: actions/configure-pages@v5 # Configures GitHub Pages settings

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3 # Uploads the build output
        with:
          # Upload the 'dist' directory (output of vite build)
          path: './dist'

  # Deploy job: Deploys the built artifact to GitHub Pages
  deploy:
    needs: build # This job depends on the 'build' job completing successfully
    permissions:
      pages: write      # Required to deploy to GitHub Pages
      id-token: write   # Required for OIDC token verification
    environment:
      name: github-pages # Specify the deployment environment
      url: ${{ steps.deployment.outputs.page_url }} # Output the deployed URL
    runs-on: ubuntu-latest # Use the latest Ubuntu runner
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 # Action to deploy the artifact
